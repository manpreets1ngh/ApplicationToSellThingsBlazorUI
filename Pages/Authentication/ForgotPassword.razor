@page "/forgot-password"

@using ApplicationToSellThings.BlazorUI.Models
@using ApplicationToSellThings.BlazorUI.Services
@using ApplicationToSellThings.BlazorUI.Services.Interfaces
@inject IResetForgotPasswordService ResetPassService
@inject NotificationService NotificationService

<section class="gradient-custom">
        <div class="container py-5 h-100">
            <div class="row d-flex justify-content-center align-items-center h-100">
                <div class="col-12 col-md-8 col-lg-6 col-xl-5">
                    <div class="card" style="border-radius: 2rem;">
                        <div class="card-body p-5">

                            <div class="b-3 mt-md-4">
                                
                            </div>
                            <div class="b-3 mt-md-4">
                                <h5 class="fw-bold mb-5">Forgot Your Password</h5>
                                <body class="fw-bold mb-5">Enter the email associated with your account and we will send you password reset instructions.</body>
                            </div>
                            
                            <div class="mb-3 mt-md-4 text-center">
                                <EditForm Model="@ForgotPassModel" OnValidSubmit="OnValidSubmit">
                                    <DataAnnotationsValidator/>
                                    <div class="form-group floating-label">
                                    <MudTextField Class="input-fields" Label="Email" @bind-Value="@ForgotPassModel.Email" Required="true" RequiredError="Email is required" For="@(() => ForgotPassModel.Email)">
                                        <ValidationMessage For="@(() => ForgotPassModel.Email)" />
                                        </MudTextField>
                                        @if (!string.IsNullOrEmpty(EmailError))
                                        {
                                            <div class="text-danger text-md-start">@EmailError</div>
                                        }
                                    </div>

                                    <div class="form-group align-center mt-5">
                                        <button class=" btn-account px-2 py-2" type="submit">
                                        <span>
                                            Send Reset Email
                                            @if (IsSuccess)
                                            {
                                                <MudIcon Icon="@Icons.Material.Filled.Check" Size="Size.Small" Class="text-default mb-1" />
                                            }
                                            else
                                            {
                                                @if(IsLoading)
                                                {
                                                    <span class="spinner-border spinner-border-sm ms-2" role="status" aria-hidden="true"></span>
                                                }
                                            }
                                        </span>
                                        </button>
                                        @* @if (IsLoading)
                                        {
                                            <span class="spinner-border spinner-border-sm ms-2" role="status" aria-hidden="true"></span>
                                        }
                                        @if (IsSuccess)
                                        {
                                            <MudIcon Icon="@Icons.Material.Filled.Check" Size="Size.Medium" Class="custom-snackbar-close-icon ml-3" />
                                        } *@
                                    </div>
                                </EditForm>
                            </div>
                           
                        </div>
                    </div>
                </div>
            </div>
        </div>
    </section>

@code {
    private ForgotPasswordModel ForgotPassModel = new ForgotPasswordModel();
    private string EmailError = string.Empty;
    private bool IsLoading = false;
    private bool IsSuccess = false;

    private async Task OnValidSubmit()
    {
        IsLoading = true;
        IsSuccess = false;

        try
        {
            var result = await ResetPassService.ForgotPasswordForuser(ForgotPassModel);
            if (result != null)
            {
                IsSuccess = true;
                NotificationService.Notify(new NotificationModel
                    {
                        Icon = Icons.Material.Outlined.CheckCircle,
                        Title = "Success",
                        Message = $"Password reset link has been sent to this email {result.Email}",
                        Type = NotificationMessageType.Success,
                        Duration = 5000
                    });
            }                        
        }
        catch (Exception ex)
        {
            NotificationService.Notify(new NotificationModel
                {
                    Icon = Icons.Material.Outlined.Error,
                    Title = "Error",
                    Message = $"Failed to send reset email: {ex.Message}",
                    Type = NotificationMessageType.Error,
                    Duration = 5000
                });
        }
        finally
        {
            IsLoading = false;
        }
    }
}

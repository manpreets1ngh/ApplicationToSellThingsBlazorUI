@page "/products"

@using ApplicationToSellThings.BlazorUI.Models.Products;
@using ApplicationToSellThings.BlazorUI.Services.Interfaces;
@inject NavigationManager NavigationManager
@inject IProductsService ProductsService

@if (products == null)
{
    <p><em>Loading...</em></p>
}
else
{
    <section class="gradient-custom">
        <div class="container py-5 h-100">
            <div class="grid-container">
                @foreach (var product in products)
                {
                    <div class="grid-item">
                        <div class="card card-border">
                            <img src="..." class="card-img-top" alt="...">
                            <div class="card-body p-4">
                                <h5 class="card-title">
                                <a class="product-link" @onclick="() => NavigateToDetails(product.ProductId)" style="cursor:pointer; color:black; text-decoration: none;">@product.ProductName</a>
                                </h5>
                                <p>@product.BrandName</p>
                                <h6>£@product.Price</h6>

                                <div class="row mt-3">
                                    <div class="col-6">
                                        <button @onclick="() => AddToCart(product)" class="btn-addToCart px-3 py-2">Add to Cart</button>
                                    </div>
                                </div>
                            </div>
                        </div>
                    </div>
                }
            </div>
        </div>
    </section>
}

@code {
    private List<Product>? products;

    protected override async Task OnInitializedAsync()
    {
        products = await ProductsService.GetProductsAsync();
    }

    private void NavigateToDetails(Guid productId)
    {
        NavigationManager.NavigateTo($"/productdetails/{productId}");
    }

    private Task AddToCart(Product product)
    {
        // Implement adding to cart, potentially also in ProductsService
        return Task.CompletedTask;
    }
}